
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Shahar & Tomer
 */
public class NewClientGUI extends javax.swing.JFrame 
{

	/**
	 * Creates new form NewClientGUI
	 */
	Client client;
	Socket socket = null;       
	PrintWriter out = null;    
	BufferedReader in = null;

	// TODO Auto-generated method stub

	public NewClientGUI() 
	{
		initComponents();
		ConnectedCB.addItem("Everyone");
		sendBTN.setEnabled(false);
		msgTXTA.setEnabled(false);
		connectedTXTA.setText("");
		connectedTXTA.setEnabled(false);
		ConnectedCB.setEnabled(false);
		mainTXTA.setEnabled(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		nickTXT = new javax.swing.JTextField();
		IpTXT = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		ConnectBTN = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		mainTXTA = new javax.swing.JTextArea();
		jScrollPane2 = new javax.swing.JScrollPane();
		connectedTXTA = new javax.swing.JTextArea();
		jScrollPane3 = new javax.swing.JScrollPane();
		msgTXTA = new javax.swing.JTextArea();
		sendBTN = new javax.swing.JButton();
		ConnectedCB = new javax.swing.JComboBox<String>();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
		jLabel1.setText("Enter nickname:");
		nickTXT.setColumns(10);
		nickTXT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
		nickTXT.setForeground(new java.awt.Color(0, 0, 255));
		nickTXT.setText("nickname here");
		nickTXT.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				nickTXTActionPerformed(evt);
			}
		});

		IpTXT.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
		IpTXT.setText("127.0.0.1");
		IpTXT.setAlignmentX(1.0F);
		IpTXT.setAlignmentY(1.0F);
		IpTXT.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				IpTXTActionPerformed(evt);
			}
		});

		jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
		jLabel2.setText("Server IP:");

		ConnectBTN.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
		ConnectBTN.setText("Connect");
		ConnectBTN.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				ConnectBTNMouseClicked(evt);
			}
			public void mousePressed(java.awt.event.MouseEvent evt) {
				ConnectBTNMousePressed(evt);
			}
		});
		ConnectBTN.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ConnectBTNActionPerformed(evt);
			}
		});

		mainTXTA.setEditable(false);
		mainTXTA.setColumns(20);
		mainTXTA.setRows(5);
		jScrollPane1.setViewportView(mainTXTA);

		jScrollPane2.setBackground(new java.awt.Color(204, 204, 204));

		connectedTXTA.setEditable(false);
		connectedTXTA.setColumns(12);
		connectedTXTA.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
		connectedTXTA.setRows(5);
		connectedTXTA.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 204, 0)));
		jScrollPane2.setViewportView(connectedTXTA);

		msgTXTA.setColumns(20);
		msgTXTA.setRows(5);
		msgTXTA.addKeyListener(new java.awt.event.KeyAdapter()
		{
			public void keyPressed(java.awt.event.KeyEvent evt)
			{
				msgTXTAKeyPressed(evt);
			}
			public void keyReleased(java.awt.event.KeyEvent evt)
			{
				msgTXTAKeyReleased(evt);
			}
		});
		jScrollPane3.setViewportView(msgTXTA);

		sendBTN.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
		sendBTN.setText("Send");
		sendBTN.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				sendBTNMousePressed(evt);
			}
		});
		sendBTN.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				sendBTNActionPerformed(evt);
			}
		});

		ConnectedCB.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				ConnectedCBItemStateChanged(evt);
			}
		});
		ConnectedCB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ConnectedCBActionPerformed(evt);
			}
		});

		jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
		jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel3.setText("Online Usres:");

		jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
		jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel4.setText("Send Private Message To:");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(layout.createSequentialGroup()
										.addGap(8, 8, 8)
										.addComponent(jLabel1)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(nickTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(jLabel2)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(IpTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(ConnectBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
								.addComponent(jScrollPane1))
						.addGap(29, 29, 29)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(ConnectedCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
								.addComponent(sendBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addContainerGap())
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
										.addGap(3, 3, 3)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(nickTXT, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
												.addComponent(IpTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(ConnectBTN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
										.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(ConnectedCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
								.addComponent(sendBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void nickTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nickTXTActionPerformed
		// TODO add your handling code here:
		if (nickTXT.getText()=="nickname here")
		{
			nickTXT.setText("");
		}

	}//GEN-LAST:event_nickTXTActionPerformed

	private void IpTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IpTXTActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_IpTXTActionPerformed

	private void ConnectBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectBTNActionPerformed
		// TODO add your handling code here:

	}//GEN-LAST:event_ConnectBTNActionPerformed

	private void sendBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBTNActionPerformed
		// TODO add your handling code here:

	}//GEN-LAST:event_sendBTNActionPerformed

	private void ConnectBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConnectBTNMouseClicked
		// TODO add your handling code here:

		if(ConnectBTN.getText()=="Connect")
		{
			if ((!nickTXT.getText().startsWith(" "))&& nickTXT.getText().length()>=1)
			{
			client=new Client (nickTXT.getText(),IpTXT.getText(),mainTXTA,connectedTXTA,ConnectedCB);
			client.StartClient();
			if(client.success)
			{
				IpTXT.disable();
				ConnectBTN.setText("Disconnect");
				client.sendName(nickTXT.getText());
				nickTXT.setEnabled(false);
				sendBTN.setEnabled(true);
				msgTXTA.setEnabled(true);
				connectedTXTA.setEnabled(true);
				ConnectedCB.setEnabled(true);
				mainTXTA.setEnabled(true);
				Thread lis=new Thread (client);
				lis.start();
			}
			}
			else
			{
				mainTXTA.setText("nickname cannot be empty\n".toUpperCase());
			}
		}
		else
		{
			IpTXT.enable();
			ConnectBTN.setText("Connect");
			client.StopClient();
			nickTXT.setEnabled(true);
			sendBTN.setEnabled(false);
			msgTXTA.setEnabled(false);
			connectedTXTA.setText("");
			connectedTXTA.setEnabled(false);
			ConnectedCB.setEnabled(false);
			mainTXTA.setEnabled(false);
		}

	}//GEN-LAST:event_ConnectBTNMouseClicked

	private void ConnectBTNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConnectBTNMousePressed
		// TODO add your handling code here:


	}//GEN-LAST:event_ConnectBTNMousePressed

	private void sendBTNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendBTNMousePressed

		// TODO add your handling code here:
		if (!client.socket.isClosed())
		{
			if(ConnectedCB.getSelectedItem()!="Everyone")
			{   
				String msg,to;
				msg=msgTXTA.getText();
				to=ConnectedCB.getSelectedItem().toString();
				client.sendPrivateMsg(msg,to);
			}
			else
			{
				client.sendMsg(msgTXTA.getText());
			}
		}
		else
		{
			mainTXTA.append("Must Connect To Server First! \n");			
			IpTXT.enable();
			ConnectBTN.setText("Connect");
			client.StopClient();
			nickTXT.setEnabled(true);
			sendBTN.setEnabled(false);
			msgTXTA.setEnabled(false);
			connectedTXTA.setText("");
			connectedTXTA.setEnabled(false);
			ConnectedCB.setEnabled(false);
			mainTXTA.setEnabled(false);	
		}
		msgTXTA.setText("");

	}//GEN-LAST:event_sendBTNMousePressed


	private void msgTXTAKeyPressed(java.awt.event.KeyEvent evt)                                   
	{                                       
		// TODO add your handling code here:

		if (evt.getKeyCode()==KeyEvent.VK_ENTER)
		{
			if (!client.socket.isClosed())
			{
				if(ConnectedCB.getSelectedItem()!="Everyone")
				{   
					String msg,to;
					msg=msgTXTA.getText();
					to=ConnectedCB.getSelectedItem().toString();
					client.sendPrivateMsg(msg,to);
				}
				else
				{
					client.sendMsg(msgTXTA.getText());
				}
			}
			else
			{
				mainTXTA.append("Must Connect To Server First! \n");			
				IpTXT.enable();
				ConnectBTN.setText("Connect");
				client.StopClient();
				nickTXT.setEnabled(true);
				sendBTN.setEnabled(false);
				msgTXTA.setEnabled(false);
				connectedTXTA.setText("");
				connectedTXTA.setEnabled(false);
				ConnectedCB.setEnabled(false);
				mainTXTA.setEnabled(false);	
			}
			msgTXTA.setText("");
		}

	}         

	private void msgTXTAKeyReleased(java.awt.event.KeyEvent evt)                                    
	{                                        
		// TODO add your handling code here:
		if (evt.getKeyCode()==KeyEvent.VK_ENTER)
		{
			msgTXTA.setText("");
		}
	}         

	private void ConnectedCBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ConnectedCBActionPerformed
	{//GEN-HEADEREND:event_ConnectedCBActionPerformed
		// TODO add your handling code here:


		//if(ConnectedCB.getItemAt(this.getName()))
	}//GEN-LAST:event_ConnectedCBActionPerformed

	private void ConnectedCBItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_ConnectedCBItemStateChanged
	{//GEN-HEADEREND:event_ConnectedCBItemStateChanged
		// TODO add your handling code here:
	}//GEN-LAST:event_ConnectedCBItemStateChanged

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(NewClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(NewClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(NewClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(NewClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new NewClientGUI().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton ConnectBTN;
	private javax.swing.JComboBox<String> ConnectedCB;
	protected javax.swing.JTextField IpTXT;//////////////////////////
	private javax.swing.JTextArea connectedTXTA;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JTextArea mainTXTA;
	private javax.swing.JTextArea msgTXTA;
	private javax.swing.JTextField nickTXT;
	private javax.swing.JButton sendBTN;
	// End of variables declaration//GEN-END:variables
}
